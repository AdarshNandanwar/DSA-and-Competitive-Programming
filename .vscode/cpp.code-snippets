{
	// Place your C, C++ workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"C++ boilerplate": {
		"scope": "c,cpp",
		"prefix": "cpp",
		"body": [
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"#define MOD 1000000007",
			"typedef long long ll;",
			"",
			"void solve(){",
			"",
			"	ll n;",
			"	${1:// code}",
			"",
			"}",
			 "",
			"int main(){",
			"",
			"	ios_base::sync_with_stdio(false);",
			"	cin.tie(NULL);",
			"",
			"	ll t;",
			"	cin>>t;",
			"	while(t--){",
			"		solve();",
			"	}",
			"	return 0;",
			"}"
		],
		"description": "Insert C++ boilerplate without file I/O."
	},
	"C++ facebook hackercup boilerplate": {
		"scope": "c,cpp",
		"prefix": "cppfbhc",
		"body": [
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"#define MOD 1000000007",
			"typedef long long ll;",
			"",
			"ll n;",
			"",
			"void solve(){",
			"",
			"	${1:// code}",
			"",
			"}",
			"",
			"int main(){",
			"",
			"	#ifndef ONLINE_JUDGE",
			"	freopen(\"input.txt\", \"r\", stdin);",
			"	freopen(\"output.txt\", \"w\", stdout);",
			"	#endif",
			"	ios_base::sync_with_stdio(false);",
			"	cin.tie(NULL);",
			"",
			"	ll t;",
			"	cin>>t;",
			"	for(ll i = 1; i<=t; i++){",
			"		cout<<\"Case #\"<<i<<\":\"<<endl;",
			"		solve();",
			"	}",
			"	return 0;",
			"}"
		],
		"description": "Insert C++ boilerplate without file I/O."
	}
}